..java:1:    PackageCase:    Package name contains upper case characters
..java:6:    AtLeastOneConstructor:  Each class should declare at least one constructor
..java:9:    CommentDefaultAccessModifier:   To avoid mistakes add a comment at the beginning of the maxCapacity field if you want a default access modifier
..java:9:    DefaultPackage: Use explicit scoping instead of the default package private level
..java:10:   LooseCoupling:  Avoid using implementation types like 'ArrayList'; use the interface instead
..java:10:   CommentDefaultAccessModifier:   To avoid mistakes add a comment at the beginning of the itemWeights field if you want a default access modifier
..java:10:   DefaultPackage: Use explicit scoping instead of the default package private level
..java:11:   LooseCoupling:  Avoid using implementation types like 'ArrayList'; use the interface instead
..java:11:   CommentDefaultAccessModifier:   To avoid mistakes add a comment at the beginning of the itemProfits field if you want a default access modifier
..java:11:   DefaultPackage: Use explicit scoping instead of the default package private level
..java:12:   CommentDefaultAccessModifier:   To avoid mistakes add a comment at the beginning of the maxChosenProfit field if you want a default access modifier
..java:12:   DefaultPackage: Use explicit scoping instead of the default package private level
..java:13:   CommentDefaultAccessModifier:   To avoid mistakes add a comment at the beginning of the availableItems field if you want a default access modifier
..java:13:   DefaultPackage: Use explicit scoping instead of the default package private level
..java:18:   LooseCoupling:  Avoid using implementation types like 'ArrayList'; use the interface instead
..java:18:   LooseCoupling:  Avoid using implementation types like 'ArrayList'; use the interface instead
..java:18:   MethodArgumentCouldBeFinal:     Parameter 'itemWeights' is not assigned and could be declared final
..java:19:   LooseCoupling:  Avoid using implementation types like 'ArrayList'; use the interface instead
..java:19:   MethodArgumentCouldBeFinal:     Parameter 'itemProfits' is not assigned and could be declared final
..java:20:   LocalVariableCouldBeFinal:      Local variable 'ratio' could be declared final
..java:21:   LocalVariableCouldBeFinal:      Local variable 'length' could be declared final
..java:30:   LooseCoupling:  Avoid using implementation types like 'ArrayList'; use the interface instead
..java:30:   MethodArgumentCouldBeFinal:     Parameter 'chosenIndex' is not assigned and could be declared final
..java:31:   LooseCoupling:  Avoid using implementation types like 'ArrayList'; use the interface instead
..java:31:   MethodArgumentCouldBeFinal:     Parameter 'itemWeights' is not assigned and could be declared final
..java:33:   ForLoopCanBeForeach:    This for loop can be replaced by a foreach loop
..java:39:   LooseCoupling:  Avoid using implementation types like 'ArrayList'; use the interface instead
..java:39:   MethodArgumentCouldBeFinal:     Parameter 'chosenIndex' is not assigned and could be declared final
..java:40:   LooseCoupling:  Avoid using implementation types like 'ArrayList'; use the interface instead
..java:40:   MethodArgumentCouldBeFinal:     Parameter 'itemProfits' is not assigned and could be declared final
..java:42:   ForLoopCanBeForeach:    This for loop can be replaced by a foreach loop
..java:48:   LooseCoupling:  Avoid using implementation types like 'ArrayList'; use the interface instead
..java:48:   MethodArgumentCouldBeFinal:     Parameter 'chosenIndex' is not assigned and could be declared final
..java:49:   LooseCoupling:  Avoid using implementation types like 'ArrayList'; use the interface instead
..java:49:   LooseCoupling:  Avoid using implementation types like 'ArrayList'; use the interface instead
..java:49:   MethodArgumentCouldBeFinal:     Parameter 'index' is not assigned and could be declared final
..java:49:   MethodArgumentCouldBeFinal:     Parameter 'itemProfits' is not assigned and could be declared final
..java:49:   MethodArgumentCouldBeFinal:     Parameter 'itemWeights' is not assigned and could be declared final
..java:49:   MethodArgumentCouldBeFinal:     Parameter 'maxCapacity' is not assigned and could be declared final
..java:50:   PrematureDeclaration:   Avoid declaring a variable if it is unreferenced before a possible exit point.
..java:50:   LocalVariableCouldBeFinal:      Local variable 'leastRatioIndex' could be declared final
..java:51:   LocalVariableCouldBeFinal:      Local variable 'previousProfit' could be declared final
..java:55:   CollapsibleIfStatements:        These nested if statements could be combined
..java:56:   OnlyOneReturn:  A method should have only one exit point, and that should be the last statement in the method
..java:67:   LocalVariableCouldBeFinal:      Local variable 'ratio' could be declared final
..java:68:   LocalVariableCouldBeFinal:      Local variable 'chosenIndex' could be declared final
..java:69:   UnusedAssignment:       The initializer for variable 'maxRatio' is never used (overwritten on line 72)
..java:70:   UnusedAssignment:       The initializer for variable 'index' is never used (overwritten on line 73)
..java:82:   CollapsibleIfStatements:        These nested if statements could be combined
..java:103:  LocalVariableCouldBeFinal:      Local variable 'email' could be declared final
..java:104:  SystemPrintln:  System.out.println is used
..java:111:  MethodArgumentCouldBeFinal:     Parameter 'args' is not assigned and could be declared final
..java:113:  ShortVariable:  Avoid variables with short names like SW
..java:113:  LocalVariableCouldBeFinal:      Local variable 'SW' could be declared final
..java:113:  LocalVariableNamingConventions: The local variable name 'SW' doesn't match '[a-z][a-zA-Z0-9]*'
..java:116:  LawOfDemeter:   Potential violation of Law of Demeter (static property access)
..java:117:  LawOfDemeter:   Potential violation of Law of Demeter (static property access)
..java:118:  LawOfDemeter:   Potential violation of Law of Demeter (static property access)
..java:119:  LawOfDemeter:   Potential violation of Law of Demeter (static property access)
..java:120:  LawOfDemeter:   Potential violation of Law of Demeter (static property access)
..java:121:  LawOfDemeter:   Potential violation of Law of Demeter (static property access)
..java:124:  LawOfDemeter:   Potential violation of Law of Demeter (static property access)
..java:125:  LawOfDemeter:   Potential violation of Law of Demeter (static property access)
..java:126:  LawOfDemeter:   Potential violation of Law of Demeter (static property access)
..java:127:  LawOfDemeter:   Potential violation of Law of Demeter (static property access)
..java:128:  LawOfDemeter:   Potential violation of Law of Demeter (static property access)
..java:129:  LawOfDemeter:   Potential violation of Law of Demeter (static property access)
..java:143:  SystemPrintln:  System.out.println is used

CollapsibleIfStatements:2
LongVariable:0
ForLoopVariableCount:0
UnusedLocalVariable:0
AddEmptyString:0
CyclomaticComplexity:0
AvoidDeeplyNestedIfStmts:0
UnusedAssignment:2
MethodArgumentCouldBeFinal:12
AvoidInstantiatingObjectsInLoops:0
PrematureDeclaration:1
ShortVariable:1
ControlStatementBraces:0
UnusedFormalParameter:0
LocalVariableCouldBeFinal:8


Needs more optimization on larger sets , The concept of dynamic programming has to be used in order to achieve good results.
Check the file attatched. Great try nontheless , keep it up =)